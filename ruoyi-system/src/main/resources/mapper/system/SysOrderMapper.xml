<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.system.mapper.SysOrderMapper">
    
    <resultMap type="SysOrder" id="SysOrderResult">
        <result property="id"    column="id"    />
        <result property="orderNo"    column="order_no"    />
        <result property="userId"    column="user_id"    />
        <result property="courseId"    column="course_id"    />
        <result property="payState"    column="pay_state"    />
        <result property="refundState"    column="refund_state"    />
        <result property="payAmount"    column="pay_amount"    />
        <result property="refundAmount"    column="refund_amount"    />
        <result property="createTime"    column="create_time"    />
    </resultMap>

    <sql id="selectSysOrderVo">
        select id, order_no, user_id, course_id, pay_state, refund_state, pay_amount, refund_amount, create_time from sys_order
    </sql>

    <select id="selectSysOrderList" parameterType="SysOrder" resultMap="SysOrderResult">
        <include refid="selectSysOrderVo"/>
        <where>  
            <if test="orderNo != null  and orderNo != ''"> and order_no = #{orderNo}</if>
            <if test="userId != null "> and user_id = #{userId}</if>
            <if test="courseId != null "> and course_id = #{courseId}</if>
            <if test="payAmount != null "> and pay_amount = #{payAmount}</if>
            <if test="refundAmount != null "> and refund_amount = #{refundAmount}</if>
        </where>
    </select>
    
    <select id="selectSysOrderById" parameterType="Long" resultMap="SysOrderResult">
        <include refid="selectSysOrderVo"/>
        where id = #{id}
    </select>
        
    <insert id="insertSysOrder" parameterType="SysOrder" useGeneratedKeys="true" keyProperty="id">
        insert into sys_order
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="orderNo != null and orderNo != ''">order_no,</if>
            <if test="userId != null">user_id,</if>
            <if test="courseId != null">course_id,</if>
            <if test="payState != null">pay_state,</if>
            <if test="refundState != null">refund_state,</if>
            <if test="payAmount != null">pay_amount,</if>
            <if test="refundAmount != null">refund_amount,</if>
            <if test="createTime != null">create_time,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="orderNo != null and orderNo != ''">#{orderNo},</if>
            <if test="userId != null">#{userId},</if>
            <if test="courseId != null">#{courseId},</if>
            <if test="payState != null">#{payState},</if>
            <if test="refundState != null">#{refundState},</if>
            <if test="payAmount != null">#{payAmount},</if>
            <if test="refundAmount != null">#{refundAmount},</if>
            <if test="createTime != null">#{createTime},</if>
         </trim>
    </insert>

    <update id="updateSysOrder" parameterType="SysOrder">
        update sys_order
        <trim prefix="SET" suffixOverrides=",">
            <if test="orderNo != null and orderNo != ''">order_no = #{orderNo},</if>
            <if test="userId != null">user_id = #{userId},</if>
            <if test="courseId != null">course_id = #{courseId},</if>
            <if test="payState != null">pay_state = #{payState},</if>
            <if test="refundState != null">refund_state = #{refundState},</if>
            <if test="payAmount != null">pay_amount = #{payAmount},</if>
            <if test="refundAmount != null">refund_amount = #{refundAmount},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteSysOrderById" parameterType="Long">
        delete from sys_order where id = #{id}
    </delete>

    <delete id="deleteSysOrderByIds" parameterType="String">
        delete from sys_order where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
</mapper>